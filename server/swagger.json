{
  "swagger": "2.0",
  "info": {
    "description": "This is an API documentation of SendIT project build in NodeJs and Express. The root url of is [http://send-it-api.herokuapp.com/api/v1/](http://send-it-api.herokuapp.com/api/v1/) and the functionining app with UI can be found [SendIt](http://send-it-api.herokuapp.com).",
    "version": "1.0.0",
    "title": "SendIT",
    "termsOfService": "",
    "contact": {
      "email": "luc.abayo@andela.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "host": "send-it-api.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "SendIT",
      "description": "A Social platform for sending Parcels in any location",
      "externalDocs": {
        "description": "The source code",
        "url": "https://github.com/abayo-luc/SendIT"
      }
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/parcels": {
      "post": {
        "tags": ["parcels"],
        "summary": "Add a new parcel to the store",
        "description": "",
        "operationId": "addParcel",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": ["parcels"],
        "summary": "Get all parcels",
        "description": "Get all parcels and this router is only accessed by admin",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Parcel"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/parcels/{id}": {
      "get": {
        "tags": ["parcels"],
        "summary": "Find parcel by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["parcels"],
        "summary": "Update an existing parcel",
        "description": "Up things like destination and destination address",
        "operationId": "updateParcel",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parcel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid Id"
          },
          "404": {
            "description": "Parcel not found"
          },
          "405": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/parcel/{parcelId}/destination": {
      "put": {
        "tags": ["parcels"],
        "summary": "uploads an image",
        "description": "",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "destination",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": true,
            "type": "string"
          },
          {
            "name": "destination_address",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Status should one of pending, in_transit or delivered"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/parcel/{parcelId}/presentLocation": {
      "put": {
        "tags": ["parcels"],
        "summary": "uploads an image",
        "description": "",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "presentLocation",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Status should one of pending, in_transit or delivered"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/parcels/{parcelId}/status": {
      "put": {
        "tags": ["parcels"],
        "summary": "uploads an image",
        "description": "",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Status should one of pending, in_transit or delivered"
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        }
      }
    },
    "/parcels/{parcelId}/cancel": {
      "put": {
        "tags": ["parcels"],
        "summary": "Cancel parcel by id",
        "description": "Cancel parcel with a specific id",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "parcelId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Parcel"
            }
          },
          "400": {
            "description": "Invalid parcelId"
          },
          "404": {
            "description": "Parcel not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": ["users"],
        "summary": "Create user",
        "description": "This not authenticated",
        "operationId": "createUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{userId}/parcels": {
      "get": {
        "tags": ["users"],
        "summary": "Get all parcels by user id",
        "description": "Get all parcels that have been created by a particular user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user's parcel need to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Parcel"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": ["users"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/current": {
      "post": {
        "tags": ["users"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get the current user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string",
          "example": "Abayo"
        },
        "lastName": {
          "type": "string",
          "example": "Jean"
        },
        "email": {
          "type": "string",
          "example": "luc.abayo@andela.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "phone": {
          "type": "string",
          "example": " 07892117275"
        },
        "isAdmin": {
          "type": "boolean",
          "example": true
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Parcel": {
      "type": "object",
      "required": ["pickup_location", "destination", "details"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pickup_location": {
          "type": "string",
          "example": "Kigali"
        },
        "pickup_address": {
          "type": "string",
          "example": "KG 11 Av"
        },
        "destination": {
          "type": "string",
          "example": "Muhanga"
        },
        "details": {
          "type": "object",
          "example": "{ 'width': 23, 'height': 34, 'length': 45, 'quantity': 45, }"
        },
        "status": {
          "type": "string",
          "description": "parcel's status during the process",
          "enum": ["in_transit", "pending", "delivered", "canceled"]
        }
      },
      "xml": {
        "name": "Parcel"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
